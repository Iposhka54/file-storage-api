plugins {
    id 'java'
    id 'org.springframework.boot' version '3.4.3'
    id 'io.spring.dependency-management' version '1.1.7'
    id "io.freefair.lombok" version "8.12.1"
}

group = 'com.iposhka'
version = '1.0'

repositories {
    mavenCentral()
}

dependencies {
    implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
    implementation 'org.springframework.boot:spring-boot-starter-web'
    implementation 'org.springframework.boot:spring-boot-starter-security'
    implementation 'org.springframework.boot:spring-boot-starter-validation'
    implementation 'org.springframework.boot:spring-boot-starter-data-redis'
    implementation 'org.springframework.session:spring-session-data-redis'
    implementation 'io.minio:minio:8.5.17'
    implementation 'org.postgresql:postgresql'
    implementation 'org.flywaydb:flyway-core'
    implementation "org.projectlombok:lombok-mapstruct-binding:0.2.0"
    implementation "org.mapstruct:mapstruct:1.5.5.Final"
    implementation 'org.springdoc:springdoc-openapi-starter-webmvc-ui:2.8.5'

    runtimeOnly 'org.flywaydb:flyway-database-postgresql'

    annotationProcessor "org.mapstruct:mapstruct-processor:1.5.5.Final"

    testImplementation 'org.testcontainers:junit-jupiter'
    testImplementation 'org.springframework.boot:spring-boot-testcontainers'
    testImplementation 'org.testcontainers:postgresql'
    testImplementation 'org.springframework.boot:spring-boot-starter-test'
    testImplementation 'org.springframework.security:spring-security-test'
}

test {
    useJUnitPlatform()
}

wrapper{
    gradleVersion '8.13'
}

tasks.withType(JavaCompile).configureEach {
    options.release = 17
    options.encoding = 'UTF-8'
}

bootJar {
    archiveBaseName = 'storage'
    archiveVersion = '1.0'
}